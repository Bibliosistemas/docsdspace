(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{277:function(a,e,r){"use strict";r.r(e);var s=r(13),n=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"desarrollo-usando-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#desarrollo-usando-docker"}},[a._v("#")]),a._v(" Desarrollo usando docker")]),a._v(" "),e("p",[a._v("Para acelerar el desarrollo es posible arrancar un contenedor docker para realizar la instalación de paquetes y arrancar el servidor de desarrollo.\nSe usa la misma imagen base de DSpace (node:14-alpine) la cual es muy pequeña y tiene todo lo necesario para desarrollar.")]),a._v(" "),e("p",[a._v("Primero y por única vez se debe correr el yarn install")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run --rm  -it --name dsbs -v /datos/ng/dspace-angular:/app -w "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/app"')]),a._v("  -p "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4000")]),a._v(":4000 node:14-alpine "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])]),e("p",[a._v("Luego cada vez que necesitemos correr el servidor de desarrollo (con hotreloading ) podemos usar el siguiente script.")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run --rm  -it --name dsbs -v /datos/ng/dspace-angular:/app -w "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/app"')]),a._v("  -p "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4000")]),a._v(":4000 node:14-alpine "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" serve --host "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.0")]),a._v(".0.0\n")])])]),e("h2",{attrs:{id:"explicacion-de-parametros"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#explicacion-de-parametros"}},[a._v("#")]),a._v(" Explicación de parámetros")]),a._v(" "),e("ul",[e("li",[a._v("--rm  borra la maquina al terminar")]),a._v(" "),e("li",[a._v("-it deja la terminal abierta. (con ctrl+c) la parás.")]),a._v(" "),e("li",[a._v("--name (nombre del docker)  desde otra terminar podes pararlo o ver el log si querés con docker logs -f dsbs")]),a._v(" "),e("li",[a._v("-v (monta el volumen, en mi caso es la ruta donde hice git clone ...)")]),a._v(" "),e("li",[a._v("-w el working directory (igual a cd /app )")]),a._v(" "),e("li",[a._v("-p 4000:4000 expone el puerto interno 4000 en el externo 4000\nnode:14:alpine   es la imagen que utilizal, podría usar una 18 creo sin problemas.")])]),a._v(" "),e("h2",{attrs:{id:"arrancar-el-server-de-desarrollo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arrancar-el-server-de-desarrollo"}},[a._v("#")]),a._v(" Arrancar el server de desarrollo")]),a._v(" "),e("blockquote",[e("p",[a._v("en este caso debe ser 0.0.0.0 para poder exponer correctamente el puerto por default (4000)")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" serve --host "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.0")]),a._v(".0.0 --port "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4000")]),a._v("   \n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);